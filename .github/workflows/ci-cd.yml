name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Set up yc CLI
        run: |
          curl -sSL https://storage.yandexcloud.net/yandexcloud-yc/install.sh | bash
          export PATH="$HOME/yandex-cloud/bin:$PATH"
          echo "$HOME/yandex-cloud/bin" >> $GITHUB_PATH

      - name: Write service account key to file and login
        run: |
          echo '${{ secrets.YC_SA_KEY }}' > key.json
          yc config set service-account-key key.json
          yc container registry configure-docker
      
      - name: Build Docker image
        run: docker build -t parser:latest .

      - name: Tag and push Docker image to Yandex Container Registry
        run: |
          docker tag parser:latest ${{ secrets.YCR_REGISTRY }}/parser:latest
          docker push ${{ secrets.YCR_REGISTRY }}/parser:latest

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.12.1'

      - name: Terraform Init
        run: |
          terraform -chdir=infra init

      - name: Terraform Plan
        env:
          FOLDER_ID: ${{ secrets.FOLDER_ID }}
          CLOUD_ID: ${{ secrets.CLOUD_ID }}
        run: |
          terraform -chdir=infra plan \
          -var="folder_id=$FOLDER_ID" \
          -var="cloud_id=$CLOUD_ID"

      - name: Terraform Apply
        env:
          FOLDER_ID: ${{ secrets.FOLDER_ID }}
          CLOUD_ID: ${{ secrets.CLOUD_ID }}
        run: |
          terraform -chdir=infra apply \
          -var="folder_id=$FOLDER_ID" \
          -var="cloud_id=$CLOUD_ID"
          cd ..

      - name: Get kubeconfig from Yandex Cloud
        run: |
          yc managed-kubernetes cluster get-credentials parser-cluster --external --force

      - name: Create Kubernetes Secret
        run: |
          kubectl create secret generic parser-secret \
          --from-literal=api-key="${{ secrets.YC_SA_KEY }}" \
          --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/deployment.yaml
